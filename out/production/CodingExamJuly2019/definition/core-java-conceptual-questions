Please answer the below core-java Questions:

What is programing language?
A. Programming language is a set of vocabulary terms and rules used to instruct computers on how to perform specific tasks.
One specific programming language used in this class is Java.


What jdk contains or composed of and define each components?
A. JDK are a set of tools and libraries that are needed to run a java program. JDK contains javac, which compiles java source code.
In it is a java tool which executes the bytecode from the java compiler as well as a jar tool,
which contains classes and methods that accomplish a specific task.


What is IDE?
A. IDE stands for Integrated Development Environment. It allows programmers to combine developer tools into a single user interface.
It usually consist of a source code editor, a debugger, and a local build automation.

What are the IDEs available in the market to support java?
A. There are many IDEs available to the public, such as DrJava, BlueJ, and JDeveloper. But two of the most popular ones,
and the two we have used in this class are Eclipse and IntelliJ.

Explain the entire java life cycle.
A. Beginning with our source code in IDE, the source code gets converted to bytecode by the java compiler.
Then the byte code is loaded into memory by the class loader and executed by the jvm into machine code.

What is class?
A. Class is an object constructor, similar to a blueprint. It determines how the object will behave and what it will contain.

What is object?
A. An object is a self-contained component which is made of methods and properties to make a set of data useful.

What is the entry point of an application?
A. The main method (such as public static void man(String[]).
Why main is static?

A. The main method has to be static so that the JVM can call for it to launch the Java application. This also prevents ambiguity
on which constructor should be called.

Which class is the superclass of all classes?
A. Object

What is difference between path and classpath variables?
A. The path variable is used to set the path for all Java software tools like javac.exe. It refers to the system.
The classpath variable sets the path for java classes. It refers to the developing environment.

What is the difference between an Interface and Abstract class?
A. Interface can only have abstract methods, while Abstract can have abstract and non-abstract methods.
Interface can only have static and final variables, while Abstract can have have those and the non variants.
Interface cannot provide the implementation of abstract class, while abstract can provide it for interface.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A. You cannot make an object from and interface and abstract class. However, you can create an anonymous subclass
in order to implement the object.

What is Access Specifier?
A. Keywords that set the accessibility of classes, methods, and other members.

What is OOP ? Define each feature of java OOP.
A. Object Oriented Programming uses objects in programming to bind the data that operates on them so that no other part
of the code can access this data except that specific function. Along with class, object, and method, there are others.
Abstraction refers to how simple things like classes and objects represent more complex code and data.
Encapsulation keeps data within a class private, and then providing public access using other methods.
Inheritance lets programmers create new classes that share some attributes of existing classes.
Polymorphism allows programmers to use the same word to have different meaning depending on context.

What is Java Package and which package is imported by default?
A. A package is a space that organizes a set of related classes and interfaces.
The default imported packages are the unnamed package and the java.lang.

What is API? Name list of API that you have used so far.
A. An Application Programming Interface is a set of rules that aid software programs in communication.
It includes all Java packages, classes, and interfaces, as well as their respective methods, fields, and constructors.
Some examples are java.util.Date and java.util.Time.

Does java support multiple inheritance, explain why or why not?
A. Java does not support multiple inheritance in order to avoid the ambiguity caused by it.
However, interfaces can be used instead of classes to implement multiple inheritances.

What is method overloading and when it happens?
A. Method overloading is when different methods with the same names can exist, so long as they have different parameters.
It occurs during compiling.

Explain exceptions in java and how to handle it.
A. Exceptions appear during runtime errors, and disrupt the path of the application. Luckily, they can be dealt with
without terminating the application.

What is static keyword in java? How it has been used in variables and methods?
A. The static keyword indicates that a member belongs to a class rather than an object.
Static variables are shared by all objects and static methods can be accessed without needing an object reference.

What is final and how it has been used variables and methods?
A. The final refers to the keyword that cannot be changed once declared.
A final variable cannot be changed, while a final method cannot be overridden.

What is final, finally and finalize?
A. Finally is a block of code that executes after a try catch block for code cleanup.
Finalize is a method called by java garbage collector that closes any open resources before destroying an object.

What is a constructor?
A. A constructor is used to create an object.

Can we have multiple constructors in a class?
A. Yes

If we don't have a constructor declared, what is called during the object creation?
A. Default constructor

What is "this" keyword in java>
A. For referencing the current object whose method is being called.

What is "super" keyword in java? How many possible way can you use?
A. References the parent class of an object.

What is JVM stand for?
A. Java Virtual Machine

Is JVM platform independent?
A. Yes

What version of java are you using?
A. 1.8

What is JAR stand for?
A. Java archive

What is the difference between JDK and JVM?
A. JDK stores all the the tools and files for Java to run properly.
JVM executes the Java byte code.

What is the difference between JVM and JRE?
A. JVM is inside JRE, which contains components to run Java applications.

What is compile time and run time?
A. Compile time is when source code is being converted to byte code, while run time refers to when byte code is executed.

What is heap?
A. A section of RAM where all objects are stored.

How java manage it's memory?
A. All references are stored in stack, while all objects are stored in heap.

What is the difference between String, StringBuffer and StringBuilder?
A. String is immutable, StringBuffer and StringBuilder are not.
StringBuffer is thread safe, StringBuilder is not.

What is Singleton class?
A. Class that allows only one instance object to be created.

What is Serialization and Deserialization?
A. Serialization is the process of converting objects to byte stream, while deserialization is the opposite process.

When to use transient variable in java?
A. When you do not want a variable to be serialized.

Difference between while and do..while loop?
A. "Do while" will execute once, while "while" will not execute without the right conditions.

What is Enum?
A. A set of constants that are user defined.

What is Iterator?
A. A method of the Iterable interface that is used to traverse over a collection.

Which one will take more memory, an int or Integer?
A. Integer

Why is String Immutable in Java?
A. Once they are instantiated, they cannot change their state.

What is constructor chaining in Java?
A. Constructor chaining is the process of calling one constructor from another constructor with respect to current object.

The difference between Serial and Parallel Garbage Collector?
A. Serial GC is used for single threaded environments, while Parallel GC is used in multithreaded environments.

What does JIT stands for?
A. The Just-In-Time (JIT) compiler is a component of the Java Runtime Environment that improves the performance of
Java applications at run time.

Explain Java Heap space and Garbage collection?
A. Heap space is the section of memory where objects are stored.
Garbage collection clears the heap of any objects that are not being used.

Can you guarantee the garbage collection process?
A. Garbage collection is automatic but it cannot be forced and it is not clear when the collection will occur

What is the difference between stack and heap in Java?
A. Stack holds local primitive variables and object references, while heap stores objects.

What is reflection in java and why is it useful?
A. Reflection gives us information about the class to which an object belongs and also the methods of that class
which can be executed by using the object. One very common use case in Java is the usage with annotations.

what is multithreading in java?
A. Allows for two or more parts of a program to run at the same time for maximum usage of CPU.

What is the use of synchronization in Java?
A. To allow one thread to access a CPU resource at a time.

What is Framework?
A. A large body of files or classes that can be added to a code in order to solve an issue.

What are the testing Framework available in java?
A. jUnit and testNG

Difference between jUnit and testNG?
A. TestNG has all the features of jUnit, plus added features such as dependency testing, group testing, and object testing.

What are the dependencies for this project?
A. Gson, java-json, Mongo-java-driver, mysql-connector and testNG.

What is dependency injection in java?
A. Dependency injection is when a object contains the dependencies of another object and is passed on to it for usage.

What is static binding and dynamic binding?
A. Static binding refers to calls that can be resolved at compilation time.
Dynamic binding are the calls that can be resolved only at runtime.








